spring:
  profiles:
    active: @environment@
  messages:
    basename: web/resultCode,message/resultCode
  #gzip压缩配置
  compression:
    enabled: true
    mime-types: application/json ,application/xml,text/html,text/xml,text/plain
    min-response-size: 2048 #默认就是2048 byte
  cloud:
    loadbalancer:
      retry:
        enabled: true
  security:
    user:
      name: @monitor.user@
      password: @monitor.pwd@




server:
  port: 16009
  servlet:
    context-path: /


eureka:
# 实例配置类： EurekaInstanceConfigBean
  instance:

     # 设置微服务调用地址为IP优先（缺省为false）
#    perferIpAddress: true
    prefer-ip-address: true
#    instance-id: ${spring.cloud.client.ipAddress}:${spring.application.name}:${server.port}
    instance-id: ${spring.cloud.client.hostname}:${spring.application.name}:${server.port}
     # 心跳时间，即服务续约间隔时间（缺省为30s）
#    leaseRenewalIntervalInSeconds: 10
    lease-renewal-interval-in-seconds: 5
     # 发呆时间，即服务续约到期时间（缺省为90s）
    lease-expiration-duration-in-seconds: 30


    # 客户端配置类： EurekaClientConfigBean
  client:
    #从eureka服务器注册表中获取注册信息的时间间隔（s），默认为30秒
    registryFetchIntervalSeconds: 5
    #是否从服务注册中心获取可用的服务清单，默认为true
    fetch-registry: true
    #是否将自己注册到eureka服务注册中心，默认为true
    register-with-eureka: true
    serviceUrl:
      defaultZone: http://${spring.security.user.name}:${spring.security.user.password}@localhost:17001/eureka-server/eureka/


# 全局ribbon配置
ribbon:
  ConnectTimeout: 4000 #请求连接的超时时间
  ReadTimeout: 4000 #请求处理的超时时间
  OkToRetryOnAllOperations: true #对所有操作请求都进行重试
  MaxAutoRetriesNextServer: 1 #切换实例的重试次数
  MaxAutoRetries: 1 #对当前实例的重试次数


# feign配置
feign:
  hystrix:
    # 打开feign的hystrix功能
    enabled: true
  compression:
    # 开启压缩
    request:
      enabled: true
      mime-types: application/json,application/xml,text/xml
      min-request-size: 2028
    response:
      enabled: true

hystrix:
  threadpool:
    BaseThreadPool:
      coreSize: 65 #线程请求池大小  (50) * 0.3 + 5 = 20  计算方法：每秒最大支撑的请求数 * (99%请求的平均响应时间 ) + 缓冲值 默认10
      maxQueueSize: 150 #BlockingQueue的最大队列数
      queueSizeRejectionThreshold: 100 #即使maxQueueSize没有达到，达到queueSizeRejectionThreshold该值后，请求也会被拒绝
      allowMaximumSizeToDivergeFromCoreSize: true #生效maximumSize 默认false，设置coreSize小于maximumSize会创建一个线程池，该线程池可以维持最大的并发性，但是在相对不活动的期间会将线程返回给系统。(主题keepAliveTimeInMinutes)
      keepAliveTimeMinutes: 1 # coreSize < maximumSize 线程空闲时间（分钟） 默认1
      maximumSize: 200 #线程池最大大小 默认10  空闲时候释放
    default:
      coreSize: 150 #线程请求池大小  (50) * 0.3 + 5 = 20  计算方法：每秒最大支撑的请求数 * (99%请求的平均响应时间 ) + 缓冲值 默认10
      maxQueueSize: 150 #BlockingQueue的最大队列数
      queueSizeRejectionThreshold: 100 #即使maxQueueSize没有达到，达到queueSizeRejectionThreshold该值后，请求也会被拒绝
      allowMaximumSizeToDivergeFromCoreSize: true #生效maximumSize 默认false，设置coreSize小于maximumSize会创建一个线程池，该线程池可以维持最大的并发性，但是在相对不活动的期间会将线程返回给系统。(主题keepAliveTimeInMinutes)
      keepAliveTimeMinutes: 1 # coreSize < maximumSize 线程空闲时间（分钟） 默认1
      maximumSize: 200 #线程池最大大小 默认10  空闲时候释放
  command:
    default:
      execution:
        timeout:
          # 打开熔断器
          enabled: true
        isolation:
          thread:
            timeoutInMilliseconds: 10000  #断路器的超时时间需要大于ribbon的超时时间，不然不会触发重试。
    circuitBreaker:
      requestVolumeThreshold: 20  #10s 当在配置时间窗口内达到此数量的失败后，进行短路。默认20个
      sleepWindowInMilliseconds: 5000 #短路多久以后开始尝试是否恢复，默认5s
      errorThresholdPercentage: 50 #出错百分比阈值，当达到此阈值后，开始短路。默认50%
    metrics:
      rollingStats:
        timeInMilliseconds: 13000 #统计滑动窗口的时间,控制circuit break的打开 默认10000  这是为线程池保留了多长时间的度量。
      rollingPercentile:
        timeInMilliseconds: #计算百分比的窗口时间 默认60000
      healthSnapshot:
        intervalInMilliseconds: 800 #记录health 快照（用来统计成功和错误绿）的间隔 默认500


